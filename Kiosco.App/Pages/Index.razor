@page "/"
<link rel="stylesheet" href="css/Login.css">
@using DPWCMSApp.Services
@using Kiosco.App.Data
@using Kiosco.App.Data.DTO
@using Kiosco.App.Services
@using System.Reflection
@inject ILoginService LoginService;
@inject ILocalStorageService localStorageService;
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject ViewOptionService ViewOption

    @if(Loading)
    {
      <div id="loading">
        <div class="loader">
            <div class="inner one"></div>
            <div class="inner two"></div>
            <div class="inner three"></div>
        </div>
      </div>
    }

<div class="row justify-content-center pt-5 mt-5">
    <div class="login-screen">

        <img id="btnLogo" src="css/imgs/image.png" width="150" height="100" />
        <br />
        <div class="app-title">
            <h3>Digitar el Codigo de su Carnet</h3>
        </div>
        <br />
        <div class="login-form">
            <form class="was-validated" @onsubmit="@(e => OnClick())">
                <div class="control-group" style="margin-bottom:30px;">
                    <input style="min-width:90%" @bind-value="carnetCode" class="login-field font-weight-bold text-uppercase" name="id" id="txtUsername" type="password" placeholder="Carnet Code" required autofocus>
                    <div class="invalid-feedback d-none">
                        Por favor ingresar su Carnet Code.
                    </div>
                </div>

                <label id="labelError" class="login-field-icon fui-use text-danger d-none" for="username">Credenciales Incorrectas </label>
                <button type="submit" class="btn btn-primary btn-large btn-block" id="loginBtn"> INGRESAR </button>
            </form>
        </div>
    </div>


</div>


@code {
    private bool Loading;
    private bool Validhidden = true;
    string carnetCode = "";
    private WebResponse<string> LoginDTO = new();

    protected override void OnInitialized()
    {
        ViewOption.Toggle(true);
        base.OnInitialized();
    }

    private async Task OnClick()
    {
        Loading = true;
        GlovalSearch glovalSearch = new GlovalSearch
        {
            CarnetCode = carnetCode,
        };

        var result = await LoginService.LoginAsync(glovalSearch);

        if(result.isSuccess && !string.IsNullOrEmpty(result.body))
        {
            await localStorageService.SetItem("CarnetCode",carnetCode);
            await localStorageService.SetItem("CarnetMame",result.body);

            NavigationManager.NavigateTo("/home");
        }else
        {
            await JSRuntime.InvokeVoidAsync("alertError");
            //await Swal.FireAsync("Oops...", "Something went wrong!", "error");
        }
        Loading = false;
    }
}