@page "/AddEncuestasInternas/{Modulo}"
@using DPWCMSApp.Services;
@using Kiosco.App.Data
@using Kiosco.App.Services
@inject IDynamicFormsService DynamicFormsService;
@inject IEncuestasInternasService EncuestasInternasService;
@inject IJSRuntime jsRunTime;
@inject NavigationManager NavigationManager;
@inject ILocalStorageService _LocalStorageService;

@inject NavigationManager NavigationManager;

@if (@Loading)
{
    <div id="loading">
        <div class="loader">
            <div class="inner one"></div>
            <div class="inner two"></div>
            <div class="inner three"></div>
        </div>
    </div>
}


<div class="card mt-1">
    <div class="card-body p-2 text-center">
        <div class="d-flex flex-row align-items-center">
            <RadzenImage Path="css/imgs/Document.png" Class="rz-border-radius-10 float-start me-3" Style="width: 50px; height: 40px;" />
            <div class="d-flex bd-highlight">
                <p class="fw-bold mb-0"><i class="fas fa-clock"></i> • LLenar Encuesta Internas</p>
            </div>
        </div>
    </div>
</div>

<img src="css/imgs/image.png" Class="end-text" Style="width: 150px; height: 100px;" />

<div class="cert-lab">
    <form id="survey-form">


        @foreach (var dyn in DynamicsForms)
        {
            @switch(dyn.Tipo)
            {
                case "list":
                        <div class="form-group">
                        <p>@dyn.Question</p>
                        <select id="dropdown" @bind="dyn.DestinationValue" name="role" class="form-control" required>
                                <option disabled selected value>seleccione...</option>
                            @foreach (var value in dyn.Valor.Split(','))
                            {
                                <option value="student">@value</option>
                            }
                        </select>
                        </div>
                    break;
                case "textarea":
                    <div class="form-group">
                        <p>@dyn.Question</p>
                        <RadzenTextArea @bind-value="@dyn.DestinationValue" Placeholder="Enter here..." Cols="170" Rows="10" />
                    </div>
                    break;

                default:
                    <div class="form-group">
                        <label id="name-label" for="name">@dyn.Question</label>
                        <input type="@dyn.Tipo" name="name" id="name" @bind-value="@dyn.DestinationValue" class="form-control" placeholder=@dyn.PlaceHolder required>
                    </div>
                    break;
            }
        }

        <div class="form-group">
            <RadzenButton Text="ENVIAR" Click="@(args => Enviar())" Style="	background-color: #6FD420 !important; color: #FFFFFF !important;" />
        </div>
    </form>
</div>

<div class="col-lg-2 p-3">
    <RadzenButton Text="VOLVER" Click="@(args => Volver())" class="bg bg-blue-cau" />
</div>

@code {
    private bool Loading;

    List<EncuestasInternasDetalle> EncuestasInternasDetalle = new();
    public static List<DynamicForms> DynamicsForms = new();
    GlobalSearchDTO GlobalSearchDTO = new();

    [Parameter]
    public string Modulo { get; set; }

    protected async override void OnInitialized()
    {
        GlobalSearchDTO.Module = Modulo;
        var result = await DynamicFormsService.GetByModule(GlobalSearchDTO);
        DynamicsForms = result.body;

        StateHasChanged();
    }

    void Volver()
    {
        NavigationManager.NavigateTo($"/Home");
    }

    private async Task Enviar()
    {
        Loading = true;

        string carnetCode = await _LocalStorageService.GetItem<string>("CarnetCode");
        string carnetName = await _LocalStorageService.GetItem<string>("CarnetMame");
        var Forms = DynamicsForms.FirstOrDefault();
        EncuestasInternas encuestasInternas = new EncuestasInternas()
        {
                EncName = Forms.Modulo,
                EncDescripcion = Forms.Descripcion,
                EmpId = carnetCode,
                PersonNumber = carnetName,
                Date = DateTime.Now,
        };

        var result = await EncuestasInternasService.Add(encuestasInternas);

        var encuestasInternasDetalles = DynamicsForms.Select(d =>
            new EncuestasInternasDetalle
        {
            EncID = result.body,
            Pregunta = d.Question,
            Respuesta = d.DestinationValue,
        }).ToList();

        await EncuestasInternasService.AddDetalle(encuestasInternasDetalles);

        Loading = false;

        NavigationManager.NavigateTo($"/EncuentasInternas");
    }
}
